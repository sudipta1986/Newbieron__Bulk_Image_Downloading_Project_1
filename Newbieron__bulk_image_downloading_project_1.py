# -*- coding: utf-8 -*-
"""Newbieron _Bulk_Image_Downloading_Project_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j4Ty3vBsrJrms6swRg7wxVIuUG83n60Z
"""

# Install necessary library and import Os,requests,BeautifulSoup library.
#!pip install requests
#!pip install bs4
import os
import requests
from bs4 import BeautifulSoup

# Store the google image link in a variable.
Google_Link = 'https://www.google.com/search?site=&tbm=isch&source=hp&biw=1873&bih=990&'

# We have to save the user_agent in variable without it we can't download the image. We can search 'my user agent' on google.
usr_agnt = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
    'Accept-Encoding': 'none',
    'Accept-Language': 'en-US,en;q=0.8',
    'Connection': 'keep-alive',
}

# We create a Folder call 'Bulk Image' where all the images will be save.
Image_Folder = 'Bulk_Image'

# Define a function for create that destination folder if is't doesn't exists it will create the folder with same name.
def start():
    if not os.path.exists(Image_Folder):
        os.mkdir(Image_Folder)
    download_images()

# Create a function to download the images. First user can put the person's name or any keyword and then number of images that he/she want's to download.
def download_images():
    name = input("Enter the person's name: ")
    num_images = int(input('How many images do you want to download: '))

# It will will show that images are scarching.
    print('Searching for images.......')

# Now we need to concat Google image link and quey, for quey we can use 'q=', and the keyword (we have save the person name/keyword in name variable) then
# save this a variable called 'search_url'

    search_url = Google_Link + 'q=' + name

# We can use Get or Post any of them, here we used get and request the 'search_url' along with the headers and headers would be the 'my user agent' then save it in a variable
# called response and convert it into a text.
    response = requests.get(search_url, headers=usr_agnt)
    html = response.text

# After that we have to use BeautifulSoup library and parser to extract features from html.
    bful_soup = BeautifulSoup(html, 'html.parser')

# Now we have to collect the link of images and along with the class of the source link. We can use FindAll command and save it in a variable. Here the variable is results.
    results = bful_soup.findAll('img', {'class': 'rg_i Q4LuWd'})

# Now we need to create a forloop in order to collect the right nouber of images. I used here try and except, if it's get any error it will try once again.
    count = 0
    images_link = []
    for i in results:
        try:
            link = i['data-src']
            images_link.append(link)
            count = count + 1
            if (count >= num_images):
                break

        except KeyError:
            continue

# Now it should be print like below.
    print(f'We have found {len(images_link)} images')
    print('Initiate the download process')

# Now We want to rename each images as there position so, we can use enumerate command to do that. We define a forloop and get requests the img_link. For changing the
# images name we need to concat destination folder name and input keywods + starting with name 1 not zero and save .jpg file extention format also writing those images name
# write byte mode with 'imgname' and give a allias 'file' and passing a content.
    for i, imglink in enumerate(images_link):
        gtimg = requests.get(imglink)
        imgname = Image_Folder + '/' + name + str(i+1) + '.jpg'
        with open(imgname,'wb') as file:
            file.write(gtimg.content)

# Then print it as below statement
    print('The file has been successfully downloaded!!!')

# Run this code in a if statement
if __name__ == '__main__':
    start()